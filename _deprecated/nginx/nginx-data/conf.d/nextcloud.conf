geo $nextcloud-whitelist {
    default 0;
    192.168.1.0/24 1;
}

upstream nextcloud-server {
    server 192.168.1.31:9000;
}

map $arg_v $asset_immutable {
    "" "";
    default "immutable";
}

#
# https://nextcloud.local.example.com
#
server {
    listen 443 ssl http2;
    server_name nextcloud.local.example.com;

    # nextcloud install root path
    root /var/www/nextcloud;

    ssl_certificate /cert/local.example.com_ecc/fullchain.cer;
    ssl_certificate_key /cert/local.example.com_ecc/local.example.com.key;
    ssl_protocols TLSv1.3;
    ssl_ciphers TLS_AES_128_GCM_SHA256:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_256_GCM_SHA384:ECDHE-ECDSA-AES256-GCM-SHA384;
    ssl_conf_command Ciphersuites TLS_AES_128_GCM_SHA256:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_256_GCM_SHA384;
    ssl_ecdh_curve X25519:prime256v1:secp384r1:secp521r1;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 192.168.1.1 ipv6=off;
    resolver_timeout 10s;

    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";

    add_header Referrer-Policy                   "no-referrer"       always;
    add_header X-Content-Type-Options            "nosniff"           always;
    add_header X-Download-Options                "noopen"            always;
    add_header X-Frame-Options                   "SAMEORIGIN"        always;
    add_header X-Robots-Tag                      "noindex, nofollow" always;
    add_header X-XSS-Protection                  "1; mode=block"     always;
    add_header X-Permitted-Cross-Domain-Policies "none"              always;

    # remove X-Powered-By, which is an information leak
    fastcgi_hide_header X-Powered-By;

    # disable request method
    if ($request_method !~ ^(GET|POST|HEAD|PROPFIND|REPORT|PUT|MKCOL|COPY|MOVE|DELETE|SEARCH|OPTIONS)$) {
        return 405;
    }

    fastcgi_buffers 64 4K;
    client_body_timeout 600s;

    # large file upload optimize
    client_max_body_size 0;
    client_body_buffer_size 512k;
    http2_body_preread_size 1048576;

    # fix connection timed out and 504 error
    fastcgi_connect_timeout 600s;
    fastcgi_read_timeout 600s;
    fastcgi_send_timeout 600s;

    # gzip types
    gzip_types application/atom+xml application/javascript application/json application/ld+json application/manifest+json application/rss+xml application/vnd.geo+json application/vnd.ms-fontobject application/wasm application/x-font-ttf application/x-web-app-manifest+json application/xhtml+xml application/xml font/opentype image/bmp image/svg+xml image/x-icon text/cache-manifest text/css text/plain text/vcard text/vnd.rim.location.xloc text/vtt text/x-component text/x-cross-domain-policy;

    index index.php index.html /index.php$request_uri;

    location = / {
        if ( $http_user_agent ~ ^DavClnt ) {
            return 302 /remote.php/webdav/$is_args$args;
        }
    }

    location = /robots.txt {
        return 200 "User-agent: *\nDisallow: /\n";
    }

    location ^~ /.well-known {
        # If your external access port is a standard port (http 80 and https 443), or the external access port is the same as the nginx listening port, return <$scheme://$host> or <$scheme://$host:$server_port>. If not, return < $scheme://$http_host> or <$scheme://$host:external access port>
        location = /.well-known/webfinger   { return 301 $scheme://$host/index.php/.well-known/webfinger; }
        location = /.well-known/nodeinfo    { return 301 $scheme://$host/index.php/.well-known/nodeinfo; }
        location = /.well-known/carddav     { return 301 $scheme://$host/remote.php/dav/; }
        location = /.well-known/caldav      { return 301 $scheme://$host/remote.php/dav/; }

        location /.well-known/acme-challenge    { try_files $uri $uri/ =404; }
        location /.well-known/pki-validation    { try_files $uri $uri/ =404; }
        return 301 /index.php$request_uri;
    }

    location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)(?:$|/)  { return 404; }
    location ~ ^/(?:\.|autotest|occ|issue|indie|db_|console)                { return 404; }

    location ~ \.php(?:$|/) {
        rewrite ^/(?!index|remote|public|cron|core\/ajax\/update|status|ocs\/v[12]|updater\/.+|oc[ms]-provider\/.+|.+\/richdocumentscode\/proxy) /index.php$request_uri;
        fastcgi_split_path_info ^(.+?\.php)(/.*)$;
        set $path_info $fastcgi_path_info;
        try_files $fastcgi_script_name =404;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $path_info;
        fastcgi_param HTTPS on;
        fastcgi_param modHeadersAvailable true;
        fastcgi_param front_controller_active true;
        fastcgi_pass nextcloud-server;
        fastcgi_intercept_errors on;
        fastcgi_request_buffering off;
        fastcgi_max_temp_file_size 0;
    }

    location ~ \.(?:css|js|svg|gif|png|jpg|ico|wasm|tflite|map)$ {
        try_files $uri /index.php$request_uri;
        add_header Cache-Control "public, max-age=15778463, $asset_immutable";
        access_log off;

        location ~ \.wasm$ {
            default_type application/wasm;
        }
    }

    location ~ \.woff2?$ {
        try_files $uri /index.php$request_uri;
        expires 7d;
        access_log off;
    }

    location /remote {
        return 301 /remote.php$request_uri;
    }

    # php-fpm running status monitoring
    location /status {
        if ( $nextcloud-whitelist = 0 ) {
            return 404;
        }

        fastcgi_index   index.php;
        fastcgi_pass    nextcloud-server;
        #fastcgi_pass    unix:/dev/shm/php-fpm.sock;
        include         fastcgi_params;
        fastcgi_param   SCRIPT_FILENAME    $document_root$fastcgi_script_name;
        fastcgi_param   SCRIPT_NAME        $fastcgi_script_name;
    }

    location / {
        try_files $uri $uri/ /index.php$request_uri;
    }
}

#
# https://nextcloud.example.com
#
server {
    listen 443 ssl http2;
    server_name nextcloud.example.com;

    # nextcloud install root path
    root /var/www/nextcloud;

    ssl_certificate /cert/example.com_ecc/fullchain.cer;
    ssl_certificate_key /cert/example.com_ecc/example.com.key;
    ssl_protocols TLSv1.3;
    ssl_ciphers TLS_AES_128_GCM_SHA256:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_256_GCM_SHA384:ECDHE-ECDSA-AES256-GCM-SHA384;
    ssl_conf_command Ciphersuites TLS_AES_128_GCM_SHA256:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_256_GCM_SHA384;
    ssl_ecdh_curve X25519:prime256v1:secp384r1:secp521r1;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 192.168.1.1 ipv6=off;
    resolver_timeout 10s;

    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";

    add_header Referrer-Policy                   "no-referrer"       always;
    add_header X-Content-Type-Options            "nosniff"           always;
    add_header X-Download-Options                "noopen"            always;
    add_header X-Frame-Options                   "SAMEORIGIN"        always;
    add_header X-Robots-Tag                      "noindex, nofollow" always;
    add_header X-XSS-Protection                  "1; mode=block"     always;
    add_header X-Permitted-Cross-Domain-Policies "none"              always;

    # remove X-Powered-By, which is an information leak
    fastcgi_hide_header X-Powered-By;

    # disable request method
    if ($request_method !~ ^(GET|POST|HEAD|PROPFIND|REPORT|PUT|MKCOL|COPY|MOVE|DELETE|SEARCH|OPTIONS)$) {
        return 405;
    }

    fastcgi_buffers 64 4K;
    client_body_timeout 600s;

    # large file upload optimize
    client_max_body_size 0;
    client_body_buffer_size 512k;
    http2_body_preread_size 1048576;

    # fix connection timed out and 504 error
    fastcgi_connect_timeout 600s;
    fastcgi_read_timeout 600s;
    fastcgi_send_timeout 600s;

    # gzip types
    gzip_types application/atom+xml application/javascript application/json application/ld+json application/manifest+json application/rss+xml application/vnd.geo+json application/vnd.ms-fontobject application/wasm application/x-font-ttf application/x-web-app-manifest+json application/xhtml+xml application/xml font/opentype image/bmp image/svg+xml image/x-icon text/cache-manifest text/css text/plain text/vcard text/vnd.rim.location.xloc text/vtt text/x-component text/x-cross-domain-policy;

    index index.php index.html /index.php$request_uri;

    location = / {
        if ( $http_user_agent ~ ^DavClnt ) {
            return 302 /remote.php/webdav/$is_args$args;
        }
    }

    location = /robots.txt {
        return 200 "User-agent: *\nDisallow: /\n";
    }

    location ^~ /.well-known {
        # If your external access port is a standard port (http 80 and https 443), or the external access port is the same as the nginx listening port, return <$scheme://$host> or <$scheme://$host:$server_port>. If not, return < $scheme://$http_host> or <$scheme://$host:external access port>
        location = /.well-known/webfinger   { return 301 $scheme://$http_host/index.php/.well-known/webfinger; }
        location = /.well-known/nodeinfo    { return 301 $scheme://$http_host/index.php/.well-known/nodeinfo; }
        location = /.well-known/carddav     { return 301 $scheme://$http_host/remote.php/dav/; }
        location = /.well-known/caldav      { return 301 $scheme://$http_host/remote.php/dav/; }

        location /.well-known/acme-challenge    { try_files $uri $uri/ =404; }
        location /.well-known/pki-validation    { try_files $uri $uri/ =404; }
        return 301 /index.php$request_uri;
    }

    location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)(?:$|/)  { return 404; }
    location ~ ^/(?:\.|autotest|occ|issue|indie|db_|console)                { return 404; }

    location ~ \.php(?:$|/) {
        rewrite ^/(?!index|remote|public|cron|core\/ajax\/update|status|ocs\/v[12]|updater\/.+|oc[ms]-provider\/.+|.+\/richdocumentscode\/proxy) /index.php$request_uri;
        fastcgi_split_path_info ^(.+?\.php)(/.*)$;
        set $path_info $fastcgi_path_info;
        try_files $fastcgi_script_name =404;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $path_info;
        fastcgi_param HTTPS on;
        fastcgi_param modHeadersAvailable true;
        fastcgi_param front_controller_active true;
        fastcgi_pass nextcloud-server;
        fastcgi_intercept_errors on;
        fastcgi_request_buffering off;
        fastcgi_max_temp_file_size 0;
    }

    location ~ \.(?:css|js|svg|gif|png|jpg|ico|wasm|tflite|map)$ {
        try_files $uri /index.php$request_uri;
        add_header Cache-Control "public, max-age=15778463, $asset_immutable";
        access_log off;

        location ~ \.wasm$ {
            default_type application/wasm;
        }
    }

    location ~ \.woff2?$ {
        try_files $uri /index.php$request_uri;
        expires 7d;
        access_log off;
    }

    location /remote {
        return 301 /remote.php$request_uri;
    }

    location / {
        try_files $uri $uri/ /index.php$request_uri;
    }
}
