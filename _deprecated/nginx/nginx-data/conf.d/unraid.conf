#
# https://unraid.local.example.com
#
server {
    listen 443 ssl http2;
    server_name unraid.local.example.com;

    ssl_certificate /cert/local.example.com_ecc/fullchain.cer;
    ssl_certificate_key /cert/local.example.com_ecc/local.example.com.key;
    ssl_protocols TLSv1.3;
    ssl_ciphers TLS_AES_128_GCM_SHA256:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_256_GCM_SHA384:ECDHE-ECDSA-AES256-GCM-SHA384;
    ssl_conf_command Ciphersuites TLS_AES_128_GCM_SHA256:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_256_GCM_SHA384;
    ssl_ecdh_curve X25519:prime256v1:secp384r1:secp521r1;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 192.168.1.1 ipv6=off;
    resolver_timeout 10s;

    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";

    add_header Referrer-Policy                      "no-referrer"   always;
    add_header X-Content-Type-Options               "nosniff"       always;
    add_header X-Download-Options                   "noopen"        always;
    add_header X-Frame-Options                      "SAMEORIGIN"    always;
    add_header X-Permitted-Cross-Domain-Policies    "none"          always;
    add_header X-Robots-Tag                         "none"          always;
    add_header X-XSS-Protection                     "1; mode=block" always;

    # disable request method
    if ($request_method !~ ^(GET|POST|HEAD)$) {
        return 405;
    }

    # If your external access port is a standard port (http 80 and https 443), or the external access port is the same as the nginx listening port, proxy_set_header Host <$host>, if not, proxy_set_header Host <$http_host> or proxy_set_header Host <$host:$server_port>
    location / {
        proxy_pass https://192.168.1.21:4433;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_hide_header X-Powered-By;

        # websocket
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_cache_bypass $http_upgrade;

        # proxy_buffering
        # see: https://www.reddit.com/r/unRAID/comments/n4gium/how_to_fix_system_logs_for_unraid_behind_reverse/
        proxy_buffering off;
    }

    location ~ /wsproxy/(.*)$ {
        proxy_pass https://192.168.1.21:4433;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_hide_header X-Powered-By;
        proxy_read_timeout 3600;

        # websocket
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_cache_bypass $http_upgrade;
    }

    location ~ /webterminal/(.*)/(.*)$ {
        proxy_pass https://192.168.1.21:4433;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_hide_header X-Powered-By;
        proxy_read_timeout 86400;

        # websocket
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_cache_bypass $http_upgrade;
    }

    location ~ /logterminal/(.*)/(.*)$ {
        proxy_pass https://192.168.1.21:4433;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_hide_header X-Powered-By;
        proxy_read_timeout 86400;

        # websocket
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_cache_bypass $http_upgrade;
    }

    location = /robots.txt {
        return 200 "User-agent: *\nDisallow: /\n";
    }
}

#
# https://unraid.example.com
#
server {

    listen 443 ssl http2;
    server_name unraid.example.com;

    ssl_certificate /cert/example.com_ecc/fullchain.cer;
    ssl_certificate_key /cert/example.com_ecc/example.com.key;
    ssl_protocols TLSv1.3;
    ssl_ciphers TLS_AES_128_GCM_SHA256:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_256_GCM_SHA384:ECDHE-ECDSA-AES256-GCM-SHA384;
    ssl_conf_command Ciphersuites TLS_AES_128_GCM_SHA256:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_256_GCM_SHA384;
    ssl_ecdh_curve X25519:prime256v1:secp384r1:secp521r1;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 192.168.1.1 ipv6=off;
    resolver_timeout 10s;

    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";

    add_header Referrer-Policy                      "no-referrer"   always;
    add_header X-Content-Type-Options               "nosniff"       always;
    add_header X-Download-Options                   "noopen"        always;
    add_header X-Frame-Options                      "SAMEORIGIN"    always;
    add_header X-Permitted-Cross-Domain-Policies    "none"          always;
    add_header X-Robots-Tag                         "none"          always;
    add_header X-XSS-Protection                     "1; mode=block" always;

    # disable request method
    if ($request_method !~ ^(GET|POST|HEAD)$) {
        return 405;
    }

    # If your external access port is a standard port (http 80 and https 443), or the external access port is the same as the nginx listening port, proxy_set_header Host <$host>, if not, proxy_set_header Host <$http_host> or proxy_set_header Host <$host:$server_port>
    location / {
        proxy_pass https://192.168.1.21:4433;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_hide_header X-Powered-By;

        # websocket
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_cache_bypass $http_upgrade;

        # proxy_buffering
        # see: https://www.reddit.com/r/unRAID/comments/n4gium/how_to_fix_system_logs_for_unraid_behind_reverse/
        proxy_buffering off;
    }

    location ~ /wsproxy/(.*)$ {
        proxy_pass https://192.168.1.21:4433;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_hide_header X-Powered-By;
        proxy_read_timeout 3600;

        # websocket
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_cache_bypass $http_upgrade;
    }

    location ~ /webterminal/(.*)/(.*)$ {
        proxy_pass https://192.168.1.21:4433;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_hide_header X-Powered-By;
        proxy_read_timeout 86400;

        # websocket
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_cache_bypass $http_upgrade;
    }

    location ~ /logterminal/(.*)/(.*)$ {
        proxy_pass https://192.168.1.21:4433;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_hide_header X-Powered-By;
        proxy_read_timeout 86400;

        # websocket
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_cache_bypass $http_upgrade;
    }

    location = /robots.txt {
        return 200 "User-agent: *\nDisallow: /\n";
    }
}
